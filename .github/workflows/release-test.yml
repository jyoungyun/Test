name: Create release

on:
  workflow_dispatch:    # Allow manual triggers
    inputs:
      tag:
        description: 'Release tag'
        required: true
      draft:
        description: 'Create a draft (unpublished) release (default: false)'
        default: false
      prerelease:
        description: 'Identify the release as a prerelease (default: false)'
        default: false

jobs:
  create-issue:
    runs-on: ubuntu-latest
    outputs:
      issue_number: ${{ steps.create_issue.outputs.issue_number }}
    steps:
      - name: Create issue
        id: create_issue
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${{ github.event.inputs.tag }} version`,
              body: `Let's release ${{ github.event.inputs.tag }} version`,
              labels: ['release']
            }).then(response => {
              console.log(response.data);
              core.setOutput('issue_number', response.data.number);
            })
  create-comment:
    needs: create-issue
    runs-on: ubuntu-latest
    steps:
      - name: Create comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ needs.create-issue.outputs.issue_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `:heavy_check_mark: Test done`
            })
  create-artifacts:
    needs: [ create-comment ]
    runs-on: ubuntu-latest
    outputs:
      package_name: ${{ steps.find-file.outputs.package_name }}
    steps:
      - run: echo "Hello, this is sample test file" > abc.txt
      - id: find-file
        run: |
          fname=$(find . -name "*.txt" | xargs -I {} basename {})
          echo "::set-output name=package_name::$fname"
      - name: Upload vsix package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.find-file.outputs.package_name }}
          path: ./${{ steps.find-file.outputs.package_name }}
  create-release:
    needs: create-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.create-artifacts.outputs.package_name }}
      - name: Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          body: |
            Changes in this Release
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ needs.create-artifacts.outputs.package_name }}
          asset_name: ${{ needs.create-artifacts.outputs.package_name }}
          asset_content_type: application/txt
